package com.bluemobi.ybb.fragment.page;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.TextView;

import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.bluemobi.base.utils.Logger;
import com.bluemobi.ybb.R;
import com.bluemobi.ybb.adapter.CommodityNoMoreAdapter;
import com.bluemobi.ybb.adapter.CommonAdapter;
import com.bluemobi.ybb.adapter.ViewHolder;
import com.bluemobi.ybb.app.YbbApplication;
import com.bluemobi.ybb.fragment.BaseFragment;
import com.bluemobi.ybb.network.model.CommodityModel;
import com.bluemobi.ybb.network.model.ParamModel;
import com.bluemobi.ybb.network.request.CommoditiesRequest;
import com.bluemobi.ybb.network.response.CommodtiesResponse;
import com.bluemobi.ybb.util.Constants;
import com.bluemobi.ybb.util.StringUtils;
import com.bluemobi.ybb.util.WebUtils;
import com.bluemobi.ybb.view.LoadingPage;
import com.handmark.pulltorefresh.library.PullToRefreshListView;

import java.util.ArrayList;
import java.util.List;

/**
 * liufengyu
 * @author Administrator
 * P7   5餐
 */
public  class LunchPage extends BasePage
{
    private CommonAdapter<CommodityModel> adapter;

    private String typeId;
    private List<CommodityModel> dataList = new ArrayList<CommodityModel>();
    private TextView mCartAmount;

    public LunchPage(Context context,BaseFragment fragment) {
        super(context,fragment);
    }
    public LunchPage(Context context,BaseFragment fragment, String typeId) {
        super(context,fragment);
        this.typeId = typeId;
    } public LunchPage(Context context,BaseFragment fragment, String typeId, TextView mCartAmount) {
        super(context,fragment);
        this.typeId = typeId;
    this.mCartAmount = mCartAmount;

}
    public LunchPage(Context context,BaseFragment fragment, TextView mCartAmount) {
        super(context,fragment);
        this.mCartAmount = mCartAmount;
    }

    @Override
    public View initView(LayoutInflater inflater) {

        View homeView = inflater.inflate(R.layout.page_lunch,null);
        plv_refresh = (PullToRefreshListView) homeView.findViewById(R.id.plv_refresh);
        initPullToRefresh(plv_refresh);
        adapter = new CommonAdapter<CommodityModel>(pageContext,
                dataList, R.layout.lv__main_search_item){

            @Override
            public void convert(ViewHolder helper, CommodityModel item) {
                helper.getView(R.id.iv_search_more).setVisibility(View.INVISIBLE);
            }
        };
        plv_refresh.setAdapter(adapter);

        return homeView;
    }

    @Override
    protected View initRootView() {


        LoadingPage loadingPage = new LoadingPage(pageContext) {
            @Override
            public View createSuccessView() {
                return null;
            }

            @Override
            protected LoadResult load() {
                return null;
            }
        };

        return  loadingPage;
    }

    @Override
    public void initData() {
              isShowLoadPage = true;
    }

    @Override
    protected LoadingPage.LoadResult load() {
        return null;
    }

    @Override
    public void loaded() {
        CommoditiesRequest request = new CommoditiesRequest(new Response.Listener<CommodtiesResponse>() {
            @Override
            public void onResponse(CommodtiesResponse response) {
                if (response != null && response.getStatus() == 0) {
                    plv_refresh.onRefreshComplete();
                    if(response.getData().getInfo() !=null){
                        if (response.getData().getCurrentpage().equals("1"))
                        {
                            dataList.clear();
                        }
                        dataList.addAll(response.getData().getInfo());
                        adapter.notifyDataSetChanged();
                        hasLoaded = true;
                    }
                    adapter = new CommodityNoMoreAdapter(pageContext, dataList, R.layout.lv__main_search_item, mCartAmount);
                    plv_refresh.setAdapter(adapter);
                }
            }
        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {

            }
        });
        List<ParamModel.ProductAttributeEntity> lists = YbbApplication.getInstance().getParamModel().getProductAttributeInfoList();
        String temp = "";
        for (ParamModel.ProductAttributeEntity item : lists) {
            if ("中餐".equals(item.getAttributeName())) {
                temp = item.getId();
            }
        }
        request.setCurrentnum(Constants.PAGE_NUM);
        request.setCurrentpage("0");
        request.setAttributeId(temp);
        request.setLoginuserid(YbbApplication.getInstance().getMyUserInfo().getUserId());
        if(StringUtils.isEmpty(typeId)){
            request.setCategoryId("3");//医护
        }else{
            request.setCategoryId(typeId);
        }
        request.setCanteenId(YbbApplication.getInstance().getCanteenId());
        request.setNetWorkResponseListener(loadingPage);
        WebUtils.doPost(request);
    }

    @Override
    protected boolean getPage(int type) {
        if (!super.getPage(type)){
            return false;
        }
        connectToServer();
        return true;
    }
    public void connectToServer(){
        CommoditiesRequest request = new CommoditiesRequest(new Response.Listener<CommodtiesResponse>() {
            @Override
            public void onResponse(CommodtiesResponse response)
            {
                if (response != null && response.getStatus() == 0){
                    plv_refresh.onRefreshComplete();
                    if(response.getData().getInfo() !=null){
                        if (response.getData().getCurrentpage().equals("1"))
                        {
                            dataList.clear();
                        }
                        dataList.addAll(response.getData().getInfo());
                        adapter.notifyDataSetChanged();
                        hasLoaded = true;
                    }
                    if (adapter==null){
                        adapter = new CommodityNoMoreAdapter(pageContext, dataList, R.layout.lv__main_search_item, mCartAmount);
                        plv_refresh.setAdapter(adapter);
                    }

                }
            }
        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                Logger.e("wangzhijun", "error222222222222222222222222222222");
                plv_refresh.onRefreshComplete();
            }
        });
        List<ParamModel.ProductAttributeEntity> lists = YbbApplication.getInstance().getParamModel().getProductAttributeInfoList();
        String temp = "";
        for (ParamModel.ProductAttributeEntity item : lists) {
            if ("午餐".equals(item.getAttributeName())) {
                temp = item.getId();
            }
        }
        request.setCurrentnum(Constants.PAGE_NUM);
        request.setPageTime("");
        request.setCurrentpage(getCurPage() + "");
        request.setAttributeId(temp);
        request.setLoginuserid(YbbApplication.getInstance().getMyUserInfo().getUserId());
        if(StringUtils.isEmpty(typeId)){
            request.setCategoryId("3");//医护
        }else{
            request.setCategoryId(typeId);
        }
        request.setCanteenId(YbbApplication.getInstance().getCanteenId());
        request.setNetWorkResponseListener(loadingPage);
        WebUtils.doPost(request);
    }
}
